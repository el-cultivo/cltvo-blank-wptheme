/**
* MIXINS
* ------
* Agrega aquí tus mixins
* 
*/

// incorporación del palceholder 
@mixin place-holder($color){
	::-webkit-input-placeholder {color: $color;}
	:-moz-placeholder {color: $color;}/* Firefox 18- */
	::-moz-placeholder {color: $color;}/* Firefox 19+ */
	:-ms-input-placeholder {color: $color;}
}

// esquinas de las cajas curvas 
@mixin border-radius( $radius ){
	border-radius: $radius;
		-moz-border-radius: $radius;
		-webkit-border-radius: $radius;
		-khtml-border-radius: $radius;
}

// ajuste para el tamaño de las cajas con contenido interno
@mixin border-sizing($box) {
	box-sizing: $box;
		-webkit-box-sizing: $box;
		-moz-box-sizing: $box;
}

/**
*  Especificar la fuentes personalizada para el diseño de la pagina
*	
*  @param string $font-family: nombre de la fuente
*  @param string $font-filename: nombre del origen (archivo) que contiene la fuente
*  @param string|number $font-weight: alto de la fuente. 
*  @param string $font-style: estilo de la fuente. 
*  @param string $font-stretch: anchura de la fuente. 
*/

@mixin declara-font-face($font-family, $font-filename, $font-weight: normal, $font-style: normal, $font-stretch: normal) {
	@font-face {
		font-family: '#{$font-family}';
		src: url('#{$font-filename}.eot');
    	src: url('#{$font-filename}.eot?#iefix') format('embedded-opentype'),
         url('#{$font-filename}.woff') format('woff'),
         url('#{$font-filename}.ttf') format('truetype'),
         url('#{$font-filename}.svg##{$font-filename}') format('svg');
		font-weight: $font-weight;
		font-style: $font-style;
		font-stretch: $font-stretch;
	}
}



/**
*  imagen de fondo
* 
* @param string $file: nombre del origen (archivo) de la imagen
* @param string $type: formato (extensión) de la imagen
* @param number $width: Ancho de la imagen
* @param number $height: Alto de la imagen
*/

@mixin background-image-retina($file, $type, $width, $height) {
	background-image: url($file + '.' + $type);

	@media (-webkit-min-device-pixel-ratio: 2), (-moz-min-device-pixel-ratio: 2) {
		& {
			background-image: url($file + '@2x.' + $type);
			-webkit-background-size: $width $height;
		}
	}
}

// atenuación del color de fondo

@mixin link-claro($color, $element: a, $donde: background-color) {
	#{$element} { #{$donde}: lighten($color, 7%);
		&:hover { #{$donde}: lighten($color, 14%) };
	}
}

// ajuste de la transparencia 

@mixin opacidad($opacidad){
	-moz-opacity: $opacidad;
	-khtml-opacity: $opacidad;
	opacity: $opacidad;
	-ms-filter:'"progid:DXImageTransform.Microsoft.Alpha" (Opacity='+$opacidad+')';
	filter: progid:DXImageTransform.Microsoft.Alpha(opacity=$opacidad);
	filter:alpha(opacity=$opacidad);
}

/**
* MIXINS LOCALES
* ------
* Agrega aquí tus mixins locales
* 
*/

// fuentes
// la función cada_col se encuentra en el archivo _funciones.scss
@mixin fuente_gnl(){
	font-family: $fuente-sans;
	font-size: tamano(1.5);
	line-height: tamano(2);
}
@mixin fuente_gnl_2(){
	font-family: $fuente-sans;
	font-size: tamano(1);
	line-height: tamano(1.5);
}

@mixin p_gnl(){
	font-family: $fuente-sans;
	font-size: tamano(1);
	line-height: tamano(1.25);
	color: $color-texto;
}

@mixin p_gnl_2(){
	font-family: $fuente-sans;
	font-size: tamano(1.25);
	line-height: tamano(1.75);
	color: $color-texto;
}

/**
*  filtro para mostrar la imagen dentro de los límites fondo
* 
* @param string $file: nombre del origen (archivo) de la imagen
* @param string $type: formato (extensión) de la imagen
* @param number $width: Ancho de la imagen
* @param number $height: Alto de la imagen
*/

@mixin bckgrnd_filter($file, $type, $width, $height){
	background-size: $width $height;
    -moz-background-size: $width $height;
    -webkit-background-size: $width $height;

	filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(
	src=$file + '.' + $type,
	sizingMethod='scale');

	-ms-filter: '"progid:DXImageTransform.Microsoft.AlphaImageLoader(src=' + $file  + '.' + $type ', sizingMethod='scale')"';
}
