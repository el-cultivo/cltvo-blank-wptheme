/*_________________________ Grid _________________________ */
.grid {
	$gutter: 20px;
	$gutter-sm: 24px;
	$col-1: 100%/12;
	&__row {
		position:relative;
		width: 100%;
		min-height: 1px;
	}
	&__container {
		position:relative;
		display: flex;
		flex-wrap: wrap;
		padding: 0 0px;
		margin-left: auto;
		margin-right: auto;
		max-width: $container-max-width;
		width: 100%;
		@include under(sm) {
			max-width: 94%;
			margin: 0 auto;
		}
	}
	&__col {

		&-1-1,
		&-1-2,
		&-1-3 {
			position:relative;
		}
		&-1-1 {
			width: 100%;
			@include under(sm) {
				padding: 0px 20px 0px 20px;
			}
		}
		&-1-2 {
			@include binary-column-maker($gutter:$gutter);
			&:nth-of-type(even) {
				padding-right: 20px;
				padding-left: 20px;
			}
			&:nth-of-type(odd) {
				padding-left: 20px;
				padding-right: 20px;
			}

			@include under(sm) {
				width: 100%;
				padding:0 20px !important;
			}
		}

		&-1-3{
			@include ternary-column-maker($gutter:$gutter)
			@include under(sm) {
				width: calc(#{$col-1} * 12);
				padding: 0px 20px 0px 20px !important;
			}

			@include under(xs) {
				padding: 0px 20px 0px 20px !important;
			}
		}

		&-1-4{
			@include cuaternary-column-maker($gutter:$gutter)
		}

		&-1-6{
			width: calc(#{$col-1} * 6);
			padding-right: $gutter/2;
			padding-left: 0;
			@include under(sm-big) {
				width: calc(#{$col-1} * 8);
				padding-right: 0;
				padding-left: 0;
			}
			@include under(xs-big) {
				width: calc(#{$col-1} * 12);
				padding-right: 0;
				padding-left: 0;
			}

		}
		&-1-7{
			width: calc(#{$col-1} * 7);
			padding-right: $gutter/2;
			padding-left: $gutter/2;
			@include under(sm-big) {
				width: calc(#{$col-1} * 8);
				padding-right: 0;
				padding-left: 0;
			}
			@include under(xs-big) {
				width: calc(#{$col-1} * 12);
				padding-right: 0;
				padding-left: 0;
			}

		}
		&-1-8 {
			width: calc(#{$col-1} * 8);
			padding-right: 0px !important;
			padding-left: 0px;
			// @include under(sm) {
			// 	width: calc(#{$col-1} * 10);
			// 	margin-left: $col-1 !important;
			// }
			@include under(sm-big) {
				width: 100%;

			}
			@include under(xs-big) {
				width: 100%;
				margin-left: 0 !important;
			}
		}

		&-1-9 {
			width: calc(#{$col-1} * 9);
			padding-right: 20px !important;
			padding-left: 20px;
			// @include under(sm) {
			// 	width: calc(#{$col-1} * 10);
			// 	margin-left: $col-1 !important;
			// }
			@include under(sm) {
				width: 100%;
			}
		}

		&-1-10 {
			width: calc(#{$col-1} * 10);
			padding-right: 20px !important;
			padding-left: 20px;
			// @include under(sm) {
			// 	width: calc(#{$col-1} * 10);
			// 	margin-left: $col-1 !important;
			// }
			@include under(sm) {
				width: 100%;
			}
		}
	}

	&__box {
		position:relative;
		width: 100%;
	}
}


// /*Grid Debug*/

// .debug {
// 	.grid {
// 		&__row {
// 			position:relative;
// 			background-color: c();
// 			min-height: 200px;
// 		}
// 		&__container {
// 			position:relative;
// 			background-color: c(gold);
// 			min-height: 100px;
// 			margin-bottom: 20px;
// 		}
// 		&__col-1-2,
// 		&__col-1-3 {
// 			position:relative;
// 			display: flex;
// 			&:nth-of-type(even) {
// 	 			background-color: c(ocher);
// 	 			min-height: 100px;
// 			}
// 			&:nth-of-type(odd) {
// 				background-color: c(beige);
// 	 			min-height: 100px;
// 			}
// 			&--contain-fixed {
// 				background-color: c(dark);
// 			}
// 		}

// 		&__box {
// 			position: relative;
// 			background-color: (white);
// 			min-height: 50px;
// 			&--fixed {
// 				background-color: c(dark);
// 			}
// 		}

// 		&__fixedElem {
// 			background-color: c(dark);
// 			height: 200px;
// 		}
// 	}
// }

$col-1: 100%/12;
.featured-home-contenedor {

	.grid__col-1-9 {
		@include under(sm) {
			width: calc(#{$col-1} * 8);
		}
		@include under(mobile) {
			width: calc(#{$col-1} * 12);
		}
	}

	.grid__col-1-4 {
		padding: 0 10px;
		@include under(sm) {
			width: calc(#{$col-1} * 3.2);
		}
		@include under(mobile) {
			width: calc(#{$col-1} * 6);
			margin: 0 auto;
		}
	}
}

/* O f f s e t */

.grid {
	&__offset {

		&-0-2 {
			width: calc(#{$col-1} * 2);
			margin: 0 10px;
			@include under(sm) {
				width: 0;
				margin: 0px;
			}
		}
	}
}
